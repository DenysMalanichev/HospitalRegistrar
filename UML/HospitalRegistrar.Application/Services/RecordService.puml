@startuml
class RecordService {
    + RecordService(recordsRepository:IRecordsRepository, patientRepository:IPatientRepository, doctorsRepository:IDoctorsRepository, timeSlotsRepository:ITimeSlotsRepository, mapper:IMapper)
    + <<async>> GetPatientCardAsync(patientId:int) : Task<IEnumerable<GetRecordDto>>
    + <<async>> GetAllRecordsAsync() : Task<IEnumerable<GetRecordDto>>
    + <<async>> GetRecordByIdAsync(id:int) : Task<GetRecordDto>
    + <<async>> AddNewRecordAsync(createRecordDto:CreateRecordDto) : Task<GetRecordDto>
    + <<async>> UpdateRecordAsync(updateRecordDto:UpdateRecordDto) : Task<GetRecordDto>
    + <<async>> DeleteRecordAsync(id:int) : Task<GetRecordDto>
    - <<async>> ValidateForeignKeys(doctorId:int, patientId:int, timeSlotId:int) : Task
}
IRecordService <|-- RecordService
RecordService --> "_recordsRepository" IRecordsRepository
RecordService --> "_patientRepository" IPatientRepository
RecordService --> "_doctorsRepository" IDoctorsRepository
RecordService --> "_timeSlotsRepository" ITimeSlotsRepository
RecordService --> "_mapper" IMapper
@enduml
